/**
*Generated by StarUML(tm) Java Add-In
*  @ Project : basis
*  @ File Name : RoleAction.java
*  @ Date : 2012/9/21
*  @ Author : wxliu
*/


package com.basis.web.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.apache.struts2.json.JSONException;
import org.apache.struts2.json.JSONUtil;

import com.basis.core.common.Result;
import com.basis.core.condition.MenuCondition;
import com.basis.core.condition.RoleCondition;
import com.basis.core.condition.RoletemplateCondition;
import com.basis.core.constants.EMessageCode;
import com.basis.core.constants.EOperator;
import com.basis.core.domain.Role;
import com.basis.core.domain.RoleMenu;
import com.basis.core.domain.Roletemplate;
import com.basis.core.domain.RoletemplateMenu;
import com.basis.core.service.IMenuService;
import com.basis.core.service.IRoleService;
import com.basis.core.service.IRoletemplateService;
import com.basis.web.common.Authority;
import com.basis.web.common.BaseAction;


public class RoleAction extends BaseAction{
	private IRoleService roleService;
	private IRoletemplateService roletemplateService;
	private IMenuService menuService;
	private RoleCondition condition;
	private Role role;
	private List<RoleMenu> roleMenuList;
	private String initmenusJson;//role（用户组） 下的菜单---JSON格式 {menuid1:{RoleMenu1},menuid2:{RoleMenu2}...}
	private List<Roletemplate> roletemplateList;
	private String menusJson;//菜单列表json格式 [{menu1},{menu2}...]
	
	/**
	 * 入口
	 * @return
	 */
	@Authority(operator=EOperator.SELECT)
	public String index() {
		return "role-index";
	}
	/**
	 * 列表
	 * @return
	 */
	@Authority(operator=EOperator.SELECT)
	public String data() {
		page=roleService.queryRolePage(condition);
		return "json-page";
	}
	/**
	 * 删除
	 * @return
	 */
	@Authority(operator=EOperator.DELETE)
	public String delete() {
		try{
			role.setModifyerId(getUser().getId());
			result=roleService.removeRole(role);
		}catch (Exception e) {
			e.printStackTrace();
			result=new Result<Object>(false,EMessageCode.EXCEPTION.getCode());
		}
		return "json-result";
	}
	/**
	 * 跳转到编辑页面
	 * @return
	 */
	@Authority(operator=EOperator.MODIFY)
	public String toEdit() {
		try {
			role=roleService.queryRoleById(role.getId());
			Set<RoleMenu> rmSet=role.getRoleMenuSet();
			//封装用户组下的菜单列表
			Map<String,RoleMenu> map=new HashMap();
			if(rmSet!=null){
				Iterator<RoleMenu> it=rmSet.iterator();
				while(it.hasNext()){
					RoleMenu rm=it.next();
					map.put(rm.getMenuId(), rm);
				}
			}
			initmenusJson=JSONUtil.serialize(map);
			//封装菜单列表
			List menusList=menuService.queryMenuList(new MenuCondition());
			menusJson=JSONUtil.serialize(menusList).toString();
		} catch (JSONException e) {
			e.printStackTrace();
		}
		return "role-edit";
	}
	/**
	 * 更新修改到数据库中
	 * @return
	 */
	@Authority(operator=EOperator.MODIFY)
	public String edit() {
		try{
			role.setModifyerId(getUser().getId());
			if(roleMenuList!=null&&!roleMenuList.isEmpty()){
				Set<RoleMenu> roleMenuSet=new HashSet<RoleMenu>();
				for(RoleMenu rm:roleMenuList){
					if(rm!=null){
						roleMenuSet.add(rm);
					}
				}
				role.setRoleMenuSet(roleMenuSet);
			}
			result=roleService.modifyRole(role);
		}catch (Exception e) {
			e.printStackTrace();
			result=new Result<Object>(false,EMessageCode.EXCEPTION.getCode());
		}
		return "json-result";
	}
	/**
	 * 跳转到新增页面
	 * @return
	 */
	@Authority(operator=EOperator.ADD)
	public String toAdd() {
		RoletemplateCondition roletemplateCondition=new RoletemplateCondition();
		roletemplateList=roletemplateService.queryRoletemplateList(roletemplateCondition);
		//封装菜单列表
		List menusList=menuService.queryMenuList(new MenuCondition());
		try {
			menusJson=JSONUtil.serialize(menusList).toString();
		} catch (JSONException e) {
			e.printStackTrace();
		}
		return "role-add";
	}
	/**
	 * 新增
	 * @return
	 */
	@Authority(operator=EOperator.ADD)
	public String add() {
		try{
			role.setCreaterId(getUser().getId());
			if(roleMenuList!=null&&!roleMenuList.isEmpty()){
				Set<RoleMenu> roleMenuSet=new HashSet<RoleMenu>();
				for(RoleMenu rm:roleMenuList){
					if(rm!=null){
						roleMenuSet.add(rm);
					}
				}
				role.setRoleMenuSet(roleMenuSet);
			}
			result=roleService.addRole(role);
		}catch (Exception e) {
			e.printStackTrace();
			result=new Result<Object>(false,EMessageCode.EXCEPTION.getCode());
		}
		return "json-result";
	}
	/**
	 * 查看
	 * @return
	 */
	@Authority(operator=EOperator.SELECT)
	public String detail() {
		return this.toEdit();
	}
	/**
	 * 选取权限模版
	 * @return
	 */
	@Authority(operator=EOperator.ADD)
	public String templateMenuList(){
		Roletemplate roletemplate=roletemplateService.queryRoletemplateById(role.getTemplateId());
		Set<RoletemplateMenu> rmset=roletemplate.getRoletemplateMenuSet();
		list=new ArrayList();
		if(rmset!=null&&!rmset.isEmpty()){
			Iterator<RoletemplateMenu> it=rmset.iterator();
			while(it.hasNext()){
				list.add(it.next());
			}
		}
		return "json-list";
	}

	public RoleCondition getCondition() {
		return condition;
	}

	public void setCondition(RoleCondition condition) {
		this.condition = condition;
	}

	public Role getRole() {
		return role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	public List<RoleMenu> getRoleMenuList() {
		return roleMenuList;
	}

	public void setRoleMenuList(List<RoleMenu> roleMenuList) {
		this.roleMenuList = roleMenuList;
	}
	public String getInitmenusJson() {
		return initmenusJson;
	}
	public void setInitmenusJson(String initmenusJson) {
		this.initmenusJson = initmenusJson;
	}
	public void setRoleService(IRoleService roleService) {
		this.roleService = roleService;
	}
	public void setRoletemplateService(IRoletemplateService roletemplateService) {
		this.roletemplateService = roletemplateService;
	}
	public List<Roletemplate> getRoletemplateList() {
		return roletemplateList;
	}
	public void setRoletemplateList(List<Roletemplate> roletemplateList) {
		this.roletemplateList = roletemplateList;
	}
	public void setMenuService(IMenuService menuService) {
		this.menuService = menuService;
	}
	public String getMenusJson() {
		return menusJson;
	}
	public void setMenusJson(String menusJson) {
		this.menusJson = menusJson;
	}
	
	
}
